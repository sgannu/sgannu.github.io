{"version":3,"sources":["pages/helpers.js","pages/ResumeGraph.js","components/toggle.js","pages/Resume.js","App.js","serviceWorker.js","index.js"],"names":["content","master","branch","commit","merge","edu","tag","commits","work","ResumeGraphComponent","withoutAuthor","templateExtend","TemplateName","Metro","message","displayAuthor","displayHash","options","template","gitgraph","name","subject","btech","uiuc","alcatel","amdocs","statefarm","aa","ToggleSlider","props","state","on","defaultOff","onChange","bind","this","setState","className","off","type","React","Component","Resume","slice","reverse","map","index","i","App","developerMode","changeMode","val","style","float","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c29a914a.chunk.js","sourcesContent":["import * as React from \"react\";\nimport {createRef, useLayoutEffect} from \"react\";\n\nexport {\n    GraphContainer,\n    createFixedHashGenerator,\n    createSvg,\n    content\n};\n\nfunction createFixedHashGenerator() {\n    let i = 0, hash = ['198X',\n        'Y2K-02', '2002-04', '3.6GPA:',\n        'Jun2004', '2004', '2005', '2004-05',\n        '2005-07', '2007-08', 'Explore',\n        '2009-10', '2010-12', '2009-12'\n    ]\n    return () => {\n        return hash[i++];\n    };\n}\n\nfunction GraphContainer(props) {\n    const graphContainer = createRef();\n\n    useLayoutEffect(() => {\n        if (graphContainer.current) {\n            props.children(graphContainer.current);\n        }\n    });\n\n    return <div ref={graphContainer} />;\n}\n\nconst SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\n\n\nfunction createSvg(options) {\n    const svg = document.createElementNS(SVG_NAMESPACE, \"svg\");\n    if (!options) return svg;\n\n    if (options.children) {\n        options.children.forEach((child) => svg.appendChild(child));\n    }\n\n    if (options.viewBox) {\n        svg.setAttribute(\"viewBox\", options.viewBox);\n    }\n\n    if (options.height) {\n        svg.setAttribute(\"height\", options.height.toString());\n    }\n\n    if (options.width) {\n        svg.setAttribute(\"width\", options.width.toString());\n    }\n\n    return svg;\n}\n\nconst content = {\n    master: {\n        branch: \"Srinivas Gannu\",\n        commit: \"Pursuing horizon for providing the best solutions with passion for technology and innovation.\",\n        merge: \"sgannu.e@gmail.com, 989.383.0030\"\n    },\n    edu: [\n        {\n            branch: \"Computer Science\",\n            tag: \"2004 - Bachelor Degree\",\n            merge: \"Graduated in distinction\",\n            commits: [\"Mathematics, Algos & DS, DB Systems, Programming, Networking, Automata etc\",\n                \"Built 'C' Frontend compiler - Lexical analysis, Syntax analysis (lex & yacc)\"\n            ]\n        },\n        {\n            branch: \"System Programming\",\n            tag: \"2010 - UIUC, Champaign, IL\",\n            merge: \"Certification\",\n            commits: [\"Algorithms, datastructures, OS, Security, Andrioid\",\n                \"Andriod kernal api & app for monitoring and optimizing resources\"]\n        }],\n    work: [\n        {\n            branch: \"Alcatel India Ltd\",\n            tag: \"2005 - Associate Developer\",\n            merge: \"Learnt few french words: Bonjour, c'est mon premier boulot.\",\n            commits: [\"Extreme programming in C, C++. Experimental and fun driven development\",\n                \"Built an application layer for CAMEL protocol for SS7 stack on TCP\"]\n        },\n        {\n            branch: \"Amdocs Inc.\",\n            tag: \"2009 - Sr. Subject Matter Expert\",\n            merge: \"Experienced Europe & US culture, enjoyed travelling, ping-pong & food.\",\n            commits: [\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\",\n                \"From C, C++ to Java & web technologies, Multi threading, web services, unit testing etc\",\n                \"Front end applications, desktop tools, automate tidious tasks, pl/sql\",\n                \"Shortcuts, custom tools, scripting, Reusable modules/libraries, apis\"\n            ]\n        }, {\n            branch: \"Statefarm.\",\n            tag: \"2012 - Tech Lead/Architect\",\n            merge: \"Had fun taking up challenges and build successfull team\",\n            commits: [\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\",\n                \"CI/CD pipeline on jenkins, automating version control and releases\",\n                \"Encourage reusability, clean code, solid principles, design patterns\",\n                \"Leadership qualities, product thinking, Delivery challenges\"\n            ]\n        }, {\n            branch: \"American Airlines.\",\n            tag: \"Till date - Lead Analyst\",\n            merge: \"Work life balance/integration. Volleyball & still love ping-pong\",\n            commits: [\"FullStack + devops, cloud technologies, design thinking, Agile principles, Angular vs react\",\n                \"From complex design patterns to simple and SOLID code\",\n                \"Focus on team success than personal. Ownership, mentoring, traning.\"\n            ]\n        }]\n};","import React from 'react';\nimport {Gitgraph, templateExtend, TemplateName} from '@gitgraph/react';\nimport {content} from './helpers';\n\nexport function ResumeGraphComponent() {\n    const withoutAuthor = templateExtend(TemplateName.Metro, {\n        commit: {\n            message: {\n                displayAuthor: false,\n                displayHash: false\n            },\n        },\n    });\n\n    const renderDot = (commit) => (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 71.84 75.33\"\n            height=\"30\"\n            width=\"30\"\n        >\n            <g fill={commit.style.dot.color} stroke=\"white\" strokeWidth=\"2\">\n                <path d=\"M68.91,35.38c4.08-1.15,3.81-3-.22-3.75-3.1-.7-18.24-5.75-20.71-6.74-2.15-1-4.67-.12-1,3.4,4,3.53,1.36,8.13,2.79,13.47C50.6,44.89,52.06,49,56,55.62c2.09,3.48,1.39,6.58-1.42,6.82-1.25.28-3.39-1.33-3.33-3.82h0L44.68,43.79c1.79-1.1,2.68-3,2-4.65s-2.5-2.29-4.46-1.93l-1.92-4.36a3.79,3.79,0,0,0,1.59-4.34c-.62-1.53-2.44-2.27-4.37-2L36,22.91c1.65-1.12,2.46-3,1.83-4.52a3.85,3.85,0,0,0-4.37-1.95c-.76-1.68-2.95-6.89-4.89-10.73C26.45,1.3,20.61-2,16.47,1.36c-5.09,4.24-1.46,9-6.86,12.92l2.05,5.35a18.58,18.58,0,0,0,2.54-2.12c1.93-2.14,3.28-6.46,3.28-6.46s1-4,2.2-.57c1.48,3.15,16.59,47.14,16.59,47.14a1,1,0,0,0,0,.11c.37,1.48,5.13,19,19.78,17.52,4.38-.52,6-1.1,9.14-3.83,3.49-2.71,5.75-6.08,5.91-12.62.12-4.67-6.22-12.62-5.81-17S66.71,36,68.91,35.38Z\" />\n                <path d=\"M2.25,14.53A28.46,28.46,0,0,1,0,17.28s3,4.75,9.58,3a47.72,47.72,0,0,0-1.43-5A10.94,10.94,0,0,1,2.25,14.53Z\" />\n            </g>\n        </svg>\n    );\n\n    const renderLabel = (branch) => {\n        return (\n            <text\n                alignmentBaseline=\"middle\"\n                dominantBaseline=\"middle\"\n                fill={branch.style.label.color}\n                style={{font: branch.style.label.font}}\n                y={20}\n                transform={\"rotate(-15)\"}\n            >\n                🎷 {branch.name}\n            </text>\n        );\n    };\n\n    const renderTooltip = (commit) => { //: CommitOptions[\"renderTooltip\"]\n        const commitSize = commit.style.dot.size * 2;\n        return (\n            <g transform={`translate(${commitSize + 10}, ${commitSize / 2})`}>\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 71.84 75.33\"\n                    height=\"30\"\n                    width=\"30\"\n                >\n                    <g fill={commit.style.dot.color} stroke=\"white\" strokeWidth=\"2\">\n                        <path d=\"M68.91,35.38c4.08-1.15,3.81-3-.22-3.75-3.1-.7-18.24-5.75-20.71-6.74-2.15-1-4.67-.12-1,3.4,4,3.53,1.36,8.13,2.79,13.47C50.6,44.89,52.06,49,56,55.62c2.09,3.48,1.39,6.58-1.42,6.82-1.25.28-3.39-1.33-3.33-3.82h0L44.68,43.79c1.79-1.1,2.68-3,2-4.65s-2.5-2.29-4.46-1.93l-1.92-4.36a3.79,3.79,0,0,0,1.59-4.34c-.62-1.53-2.44-2.27-4.37-2L36,22.91c1.65-1.12,2.46-3,1.83-4.52a3.85,3.85,0,0,0-4.37-1.95c-.76-1.68-2.95-6.89-4.89-10.73C26.45,1.3,20.61-2,16.47,1.36c-5.09,4.24-1.46,9-6.86,12.92l2.05,5.35a18.58,18.58,0,0,0,2.54-2.12c1.93-2.14,3.28-6.46,3.28-6.46s1-4,2.2-.57c1.48,3.15,16.59,47.14,16.59,47.14a1,1,0,0,0,0,.11c.37,1.48,5.13,19,19.78,17.52,4.38-.52,6-1.1,9.14-3.83,3.49-2.71,5.75-6.08,5.91-12.62.12-4.67-6.22-12.62-5.81-17S66.71,36,68.91,35.38Z\" />\n                        <path d=\"M2.25,14.53A28.46,28.46,0,0,1,0,17.28s3,4.75,9.58,3a47.72,47.72,0,0,0-1.43-5A10.94,10.94,0,0,1,2.25,14.53Z\" />\n                    </g>\n                </svg>\n                <text x={40} y={15} fill={commit.style.dot.color}>\n                    {commit.hashAbbrev} - {commit.subject}\n                </text>\n            </g>\n        );\n    };\n\n    return (\n        <Gitgraph options={{\n            template: withoutAuthor\n            // generateCommitHash: createFixedHashGenerator()\n        }}>\n            {(gitgraph) => {\n                // Simulate git commands with Gitgraph API.\n                const master = gitgraph.branch({name: content.master.branch});\n                master.commit({subject: \"Initial commit in Millennials era\"});\n                const edu = gitgraph.branch(\"Education\");\n                edu.commit(\"Personal finance, desktop with 128MB RAM and 1GB HD\")\n                edu.merge(btech(gitgraph), \"Graduated in distinction\").tag(\"2004 - Bachelor Degree\");\n                edu.merge(uiuc(gitgraph), \"Certification\").tag(\"2010 - UIUC, Champaign, IL\");\n                master.merge(edu, \"Most eligible graduate for programming job!\");\n\n                const work = gitgraph.branch(\"Professional experience\");\n                work.commit(\"Got drivers license, Bought some business casuals and upgraded to laptop.\");\n                work.merge(alcatel(gitgraph), \"Learnt few french words: Bonjour, c'est mon premier boulot.\").tag(\"2005 - Associate Developer\");\n                work.merge(amdocs(gitgraph), \"Experienced Europe & US culture, enjoyed travelling, ping-pong & food.\").tag(\"2009 - Sr. Subject Matter Expert\");\n                work.merge(statefarm(gitgraph), \"Had fun taking up challenges and build successfull team\").tag(\"2012 - Tech Lead/Architect\");\n                work.merge(aa(gitgraph), \"Work life balance/integration. Volleyball & still love ping-pong\").tag(\"Till date - Lead Analyst\")\n                    .commit(content.master.commit);\n                master.merge(work, content.master.merge);\n            }}\n        </Gitgraph>\n    );\n}\n\nfunction btech(gitgraph) {\n    const edu = gitgraph.branch(\"Computer Science\");\n    edu.commit(\"Mathematics, Algos & DS, DB Systems, Programming, Networking, Automata etc\");\n    edu.commit(\"Built 'C' Frontend compiler - Lexical analysis, Syntax analysis (lex & yacc)\");\n    return edu;\n}\n\nfunction uiuc(gitgraph) {\n    const edu = gitgraph.branch(\"System Programming\");\n    edu.commit(\"Algorithms, datastructures, OS, Security, Andrioid\");\n    edu.commit(\"Andriod kernal api & app for monitoring and optimizing resources\");\n    return edu;\n}\n\nfunction alcatel(gitgraph) {\n    const branch = gitgraph.branch(\"Alcatel India Ltd\");\n    branch.commit(\"Extreme programming in C, C++. Experimental and fun driven development\")\n        .commit(\"Built an application layer for CAMEL protocol for SS7 stack on TCP\");\n    return branch;\n}\n\nfunction amdocs(gitgraph) {\n    const branch = gitgraph.branch(\"Amdocs Inc.\");\n    branch.commit(\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\")\n        .commit(\"From C, C++ to Java & web technologies, Multi threading, web services, unit testing etc\")\n        .commit(\"Front end applications, desktop tools, automate tidious tasks, pl/sql\")\n        .commit(\"Shortcuts, custom tools, scripting, Reusable modules/libraries, apis\");\n    return branch;\n}\n\nfunction statefarm(gitgraph) {\n    const branch = gitgraph.branch(\"Statefarm.\");\n    branch.commit(\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\")\n        .commit(\"CI/CD pipeline on jenkins, automating version control and releases\")\n        .commit(\"Encourage reusability, clean code, solid principles, design patterns\")\n        .commit(\"Leadership qualities, product thinking, Delivery challenges\");\n    return branch;\n}\n\nfunction aa(gitgraph) {\n    const branch = gitgraph.branch(\"American Airlines.\");\n    branch.commit(\"FullStack + devops, cloud technologies, design thinking, Agile principles, Angular vs react\")\n        .commit(\"From complex design patterns to simple and SOLID code\")\n        .commit(\"Focus on team success than personal. Ownership, mentoring, traning.\");\n    return branch;\n}","import React from 'react';\n\nexport default class ToggleSlider extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {on: props.defaultOff ? false : true};\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange() {\n        this.setState({on: !this.state.on})\n        this.props.onChange(!this.state.on);\n    }\n\n    render() {\n        return (\n            <label className=\"switch round\">\n                <span className={\"switch-text \" + (this.state.on ? 'selected' : '')}>{this.props.on}</span>\n                <span className={\"switch-text right \" + (this.state.on ? '' : 'selected')}>{this.props.off}</span>\n                <input type=\"checkbox\" onChange={this.onChange} />\n                <span className=\"slider round\" />\n            </label>\n        );\n    }\n}","import React from 'react';\nimport {content} from './helpers';\n\nexport default class Resume extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            work: content.work.slice(0).reverse(),\n            edu: content.edu.slice(0).reverse()\n        }\n    }\n\n    render() {\n        return (<div className=\"content\">\n            <div className=\"gray\">\n                <span>{content.master.branch} - {content.master.merge}</span>\n                <p className=\"small\">{content.master.commit}</p>\n                <br />\n            </div>\n\n            <div className=\"lists\">\n                {this.state.work.map((edu, index) => {\n                    return <div><span className=\"gray\">{edu.branch} ({edu.tag})</span>\n                        <p className=\"gray small\">{edu.merge}</p>\n                        <ul>\n                            {edu.commits.map((commit, i) => {\n                                return <li>{commit}</li>\n                            })}\n                        </ul>\n                    </div>\n                })}\n\n                {this.state.edu.map((edu, index) => {\n                    return <div>\n                        <span className=\"gray\">{edu.branch} ({edu.tag})</span>\n                        <p className=\"gray small\">{edu.merge}</p>\n                        <ul>\n                            {edu.commits.map((commit, i) => {\n                                return <li>{commit}</li>\n                            })}\n                        </ul>\n                    </div>\n                })}\n            </div>\n        </div >);\n    }\n}\n","import React from 'react';\nimport './App.css';\nimport {ResumeGraphComponent} from './pages/ResumeGraph';\nimport ToggleSlider from './components/toggle';\nimport Resume from './pages/Resume';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {developerMode: true};\n    this.changeMode = this.changeMode.bind(this);\n  }\n\n  changeMode(val) {\n    this.setState({developerMode: val});\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div style={{float: \"right\"}}>\n          <ToggleSlider on=\"developer mode\" off=\"recruiter mode\" onChange={this.changeMode} />\n        </div>\n        {this.state.developerMode ? (\n          <ResumeGraphComponent />\n        ) : (\n            <Resume />\n          )}\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}