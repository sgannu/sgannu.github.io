{"ast":null,"code":"var _jsxFileName = \"/Users/sgannu/projects/sgannu.github.io/src/pages/ResumeGraph.js\";\nimport React from 'react';\nimport { Gitgraph, templateExtend, TemplateName, CommitOptions, BranchOptions } from '@gitgraph/react';\nimport { createFixedHashGenerator } from './helpers';\nexport function ResumeGraphComponent() {\n  const withoutAuthor = templateExtend(TemplateName.Metro, {\n    commit: {\n      message: {\n        displayAuthor: false,\n        displayHash: false\n      }\n    }\n  });\n\n  const renderDot = commit => React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 71.84 75.33\",\n    height: \"30\",\n    width: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"g\", {\n    fill: commit.style.dot.color,\n    stroke: \"white\",\n    strokeWidth: \"2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M2.25,14.53A28.46,28.46,0,0,1,0,17.28s3,4.75,9.58,3a47.72,47.72,0,0,0-1.43-5A10.94,10.94,0,0,1,2.25,14.53Z\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  })));\n\n  const renderLabel = branch => {\n    return React.createElement(\"text\", {\n      alignmentBaseline: \"middle\",\n      dominantBaseline: \"middle\",\n      fill: branch.style.label.color,\n      style: {\n        font: branch.style.label.font\n      },\n      y: 20,\n      transform: \"rotate(-15)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uD83C\\uDFB7 \", branch.name);\n  };\n\n  return React.createElement(Gitgraph, {\n    options: {\n      template: withoutAuthor // generateCommitHash: createFixedHashGenerator()\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, gitgraph => {\n    // Simulate git commands with Gitgraph API.\n    const master = gitgraph.branch({\n      name: \"Srinivas Gannu\"\n    });\n    master.commit({\n      subject: \"Initial commit in Millennials era\",\n      renderDot\n    });\n    const edu = gitgraph.branch(\"Education\");\n    edu.commit(\"Personal finance, desktop with 128MB RAM and 1GB HD\");\n    edu.merge(btech(gitgraph), \"Graduated in distinction\").tag(\"2004 - Bachelor Degree\");\n    edu.merge(uiuc(gitgraph), \"Certification\").tag(\"2010 - UIUC, Champaign, IL\");\n    master.merge(edu, \"Most eligible graduate for programming job!\");\n    const work = gitgraph.branch(\"Professional experience\");\n    work.commit(\"Got drivers license, Bought some business casuals and upgraded to laptop.\");\n    work.merge(alcatel(gitgraph), \"Learnt few french words: Bonjour, c'est mon premier boulot.\").tag(\"2005 - Associate Developer\");\n    work.merge(amdocs(gitgraph), \"Experienced Europe & US culture, enjoyed travelling, ping-pong & food.\").tag(\"2009 - Sr. Subject Matter Expert\");\n    work.merge(statefarm(gitgraph), \"Had fun taking up challenges and build successfull team\").tag(\"2012 - Tech Lead/Architect\");\n    work.merge(aa(gitgraph), \"Work life balance/integration. Volleyball & still love ping-pong\").tag(\"Till date - Lead Analyst\").commit(\"Pursuing horizon for providing the best solutions with passion for technology and innovation.\");\n    master.merge(work, \"sgannu.e@gmail.com, 989.383.0030    -  { if (! a git-user) read from bottom to top } \");\n  });\n}\n\nfunction btech(gitgraph) {\n  const edu = gitgraph.branch(\"Computer Science\");\n  edu.commit(\"Mathematics, Algos & DS, DB Systems, Programming, Networking, Automata etc\");\n  edu.commit(\"Built 'C' Frontend compiler - Lexical analysis, Syntax analysis (lex & yacc)\");\n  return edu;\n}\n\nfunction uiuc(gitgraph) {\n  const edu = gitgraph.branch(\"System Programming\");\n  edu.commit(\"Algorithms, datastructures, OS, Security, Andrioid\");\n  edu.commit(\"Andriod kernal api & app for monitoring and optimizing resources\");\n  return edu;\n}\n\nfunction alcatel(gitgraph) {\n  const branch = gitgraph.branch(\"Alcatel India Ltd\");\n  branch.commit(\"Extreme programming in C, C++. Experimental and fun driven development\");\n  branch.commit(\"Built an application layer for CAMEL protocol for SS7 stack on TCP\");\n  return branch;\n}\n\nfunction amdocs(gitgraph) {\n  const branch = gitgraph.branch(\"Amdocs Inc.\");\n  branch.commit(\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\");\n  branch.commit(\"From C, C++ to Java & web technologies, Multi threading, web services, unit testing etc\");\n  branch.commit(\"Front end applications, desktop tools, automate tidious tasks, pl/sql\");\n  branch.commit(\"Reusable modules/libraries, apis\");\n  return branch;\n}\n\nfunction statefarm(gitgraph) {\n  const branch = gitgraph.branch(\"Statefarm\");\n  branch.commit(\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\").commit(\"CI/CD pipeline on jenkins, automating version control and releases\").commit(\"Encourage reusability, clean code, solid principles, design patterns\").commit(\"Leadership qualities, product thinking, Delivery challenges\");\n  return branch;\n}\n\nfunction aa(gitgraph) {\n  const branch = gitgraph.branch(\"American Airlines.\");\n  branch.commit(\"FullStack + devops, cloud technologies, design thinking, Agile principles, Angular vs react\").commit(\"From complex design patterns to simple and SOLID code\").commit(\"Focus on team success than personal. Ownership, mentoring, traning.\");\n  return branch;\n}","map":{"version":3,"sources":["/Users/sgannu/projects/sgannu.github.io/src/pages/ResumeGraph.js"],"names":["React","Gitgraph","templateExtend","TemplateName","CommitOptions","BranchOptions","createFixedHashGenerator","ResumeGraphComponent","withoutAuthor","Metro","commit","message","displayAuthor","displayHash","renderDot","style","dot","color","renderLabel","branch","label","font","name","template","gitgraph","master","subject","edu","merge","btech","tag","uiuc","work","alcatel","amdocs","statefarm","aa"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gitgraph, templateExtend, TemplateName, CommitOptions, BranchOptions} from '@gitgraph/react';\nimport {createFixedHashGenerator} from './helpers';\n\nexport function ResumeGraphComponent() {\n    const withoutAuthor = templateExtend(TemplateName.Metro, {\n        commit: {\n            message: {\n                displayAuthor: false,\n                displayHash: false\n            },\n        },\n    });\n\n    const renderDot = (commit) => (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 71.84 75.33\"\n            height=\"30\"\n            width=\"30\"\n        >\n            <g fill={commit.style.dot.color} stroke=\"white\" strokeWidth=\"2\">\n                <path d=\"M2.25,14.53A28.46,28.46,0,0,1,0,17.28s3,4.75,9.58,3a47.72,47.72,0,0,0-1.43-5A10.94,10.94,0,0,1,2.25,14.53Z\" />\n            </g>\n        </svg>\n    );\n\n    const renderLabel = (branch) => {\n        return (\n            <text\n                alignmentBaseline=\"middle\"\n                dominantBaseline=\"middle\"\n                fill={branch.style.label.color}\n                style={{font: branch.style.label.font}}\n                y={20}\n                transform={\"rotate(-15)\"}\n            >\n                🎷 {branch.name}\n            </text>\n        );\n    };\n\n    return (\n        <Gitgraph options={{\n            template: withoutAuthor\n            // generateCommitHash: createFixedHashGenerator()\n        }}>\n            {(gitgraph) => {\n                // Simulate git commands with Gitgraph API.\n                const master = gitgraph.branch({name: \"Srinivas Gannu\"});\n                master.commit({subject: \"Initial commit in Millennials era\", renderDot});\n                const edu = gitgraph.branch(\"Education\");\n                edu.commit(\"Personal finance, desktop with 128MB RAM and 1GB HD\")\n                edu.merge(btech(gitgraph), \"Graduated in distinction\").tag(\"2004 - Bachelor Degree\");\n                edu.merge(uiuc(gitgraph), \"Certification\").tag(\"2010 - UIUC, Champaign, IL\");\n                master.merge(edu, \"Most eligible graduate for programming job!\");\n\n                const work = gitgraph.branch(\"Professional experience\");\n                work.commit(\"Got drivers license, Bought some business casuals and upgraded to laptop.\");\n                work.merge(alcatel(gitgraph), \"Learnt few french words: Bonjour, c'est mon premier boulot.\").tag(\"2005 - Associate Developer\");\n                work.merge(amdocs(gitgraph), \"Experienced Europe & US culture, enjoyed travelling, ping-pong & food.\").tag(\"2009 - Sr. Subject Matter Expert\");\n                work.merge(statefarm(gitgraph), \"Had fun taking up challenges and build successfull team\").tag(\"2012 - Tech Lead/Architect\");\n                work.merge(aa(gitgraph), \"Work life balance/integration. Volleyball & still love ping-pong\").tag(\"Till date - Lead Analyst\")\n                    .commit(\"Pursuing horizon for providing the best solutions with passion for technology and innovation.\");\n                master.merge(work, \"sgannu.e@gmail.com, 989.383.0030    -  { if (! a git-user) read from bottom to top } \");\n            }}\n        </Gitgraph>\n    );\n}\n\nfunction btech(gitgraph) {\n    const edu = gitgraph.branch(\"Computer Science\");\n    edu.commit(\"Mathematics, Algos & DS, DB Systems, Programming, Networking, Automata etc\");\n    edu.commit(\"Built 'C' Frontend compiler - Lexical analysis, Syntax analysis (lex & yacc)\");\n    return edu;\n}\n\nfunction uiuc(gitgraph) {\n    const edu = gitgraph.branch(\"System Programming\");\n    edu.commit(\"Algorithms, datastructures, OS, Security, Andrioid\");\n    edu.commit(\"Andriod kernal api & app for monitoring and optimizing resources\");\n    return edu;\n}\n\nfunction alcatel(gitgraph) {\n    const branch = gitgraph.branch(\"Alcatel India Ltd\");\n    branch.commit(\"Extreme programming in C, C++. Experimental and fun driven development\");\n    branch.commit(\"Built an application layer for CAMEL protocol for SS7 stack on TCP\");\n    return branch;\n}\n\nfunction amdocs(gitgraph) {\n    const branch = gitgraph.branch(\"Amdocs Inc.\");\n    branch.commit(\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\");\n    branch.commit(\"From C, C++ to Java & web technologies, Multi threading, web services, unit testing etc\");\n    branch.commit(\"Front end applications, desktop tools, automate tidious tasks, pl/sql\");\n    branch.commit(\"Reusable modules/libraries, apis\");\n    return branch;\n}\n\nfunction statefarm(gitgraph) {\n    const branch = gitgraph.branch(\"Statefarm\");\n    branch.commit(\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\")\n        .commit(\"CI/CD pipeline on jenkins, automating version control and releases\")\n        .commit(\"Encourage reusability, clean code, solid principles, design patterns\")\n        .commit(\"Leadership qualities, product thinking, Delivery challenges\");\n    return branch;\n}\n\nfunction aa(gitgraph) {\n    const branch = gitgraph.branch(\"American Airlines.\");\n    branch.commit(\"FullStack + devops, cloud technologies, design thinking, Agile principles, Angular vs react\")\n        .commit(\"From complex design patterns to simple and SOLID code\")\n        .commit(\"Focus on team success than personal. Ownership, mentoring, traning.\");\n    return branch;\n}"]},"metadata":{},"sourceType":"module"}