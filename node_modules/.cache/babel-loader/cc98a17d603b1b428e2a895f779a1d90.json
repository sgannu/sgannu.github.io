{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from \"react\";\n\nvar BranchLabel =\n/** @class */\nfunction (_super) {\n  __extends(BranchLabel, _super);\n\n  function BranchLabel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      textWidth: 0,\n      textHeight: 0\n    };\n    _this.$text = React.createRef();\n    return _this;\n  }\n\n  BranchLabel.prototype.componentDidMount = function () {\n    var box = this.$text.current.getBBox();\n    this.setState({\n      textWidth: box.width,\n      textHeight: box.height\n    });\n  };\n\n  BranchLabel.prototype.render = function () {\n    var _a = this.props,\n        branch = _a.branch,\n        commit = _a.commit;\n    var boxWidth = this.state.textWidth + 2 * BranchLabel.paddingX;\n    var boxHeight = this.state.textHeight + 2 * BranchLabel.paddingY;\n    return React.createElement(\"g\", null, React.createElement(\"rect\", {\n      stroke: branch.style.label.strokeColor || commit.style.color,\n      fill: branch.style.label.bgColor,\n      rx: branch.style.label.borderRadius,\n      width: boxWidth,\n      height: boxHeight\n    }), React.createElement(\"text\", {\n      ref: this.$text,\n      fill: branch.style.label.color || commit.style.color,\n      style: {\n        font: branch.style.label.font\n      },\n      alignmentBaseline: \"middle\",\n      dominantBaseline: \"middle\",\n      x: BranchLabel.paddingX,\n      y: boxHeight / 2\n    }, branch.name));\n  };\n\n  BranchLabel.paddingX = 10;\n  BranchLabel.paddingY = 5;\n  return BranchLabel;\n}(React.Component);\n\nexport { BranchLabel };","map":{"version":3,"sources":["../src/BranchLabel.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;;AAaA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,WAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAGkB,IAAA,KAAA,CAAA,KAAA,GAAQ;AAAE,MAAA,SAAS,EAAE,CAAb;AAAgB,MAAA,UAAU,EAAE;AAA5B,KAAR;AAER,IAAA,KAAA,CAAA,KAAA,GAAQ,KAAK,CAAC,SAAN,EAAR;;AAoCT;;AAlCQ,EAAA,WAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACE,QAAM,GAAG,GAAG,KAAK,KAAL,CAAW,OAAX,CAAoB,OAApB,EAAZ;AACA,SAAK,QAAL,CAAc;AAAE,MAAA,SAAS,EAAE,GAAG,CAAC,KAAjB;AAAwB,MAAA,UAAU,EAAE,GAAG,CAAC;AAAxC,KAAd;AACD,GAHM;;AAKA,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACQ,QAAA,EAAA,GAAA,KAAA,KAAA;AAAA,QAAE,MAAA,GAAA,EAAA,CAAA,MAAF;AAAA,QAAU,MAAA,GAAA,EAAA,CAAA,MAAV;AAEN,QAAM,QAAQ,GAAG,KAAK,KAAL,CAAW,SAAX,GAAuB,IAAI,WAAW,CAAC,QAAxD;AACA,QAAM,SAAS,GAAG,KAAK,KAAL,CAAW,UAAX,GAAwB,IAAI,WAAW,CAAC,QAA1D;AAEA,WACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,MAAM,EAAE,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,WAAnB,IAAkC,MAAM,CAAC,KAAP,CAAa,KADzD;AAEE,MAAA,IAAI,EAAE,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,OAF3B;AAGE,MAAA,EAAE,EAAE,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,YAHzB;AAIE,MAAA,KAAK,EAAE,QAJT;AAKE,MAAA,MAAM,EAAE;AALV,KAAA,CADF,EAQE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,GAAG,EAAE,KAAK,KADZ;AAEE,MAAA,IAAI,EAAE,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB,KAAnB,IAA4B,MAAM,CAAC,KAAP,CAAa,KAFjD;AAGE,MAAA,KAAK,EAAE;AAAE,QAAA,IAAI,EAAE,MAAM,CAAC,KAAP,CAAa,KAAb,CAAmB;AAA3B,OAHT;AAIE,MAAA,iBAAiB,EAAC,QAJpB;AAKE,MAAA,gBAAgB,EAAC,QALnB;AAME,MAAA,CAAC,EAAE,WAAW,CAAC,QANjB;AAOE,MAAA,CAAC,EAAE,SAAS,GAAG;AAPjB,KAAA,EASG,MAAM,CAAC,IATV,CARF,CADF;AAsBD,GA5BM;;AAXgB,EAAA,WAAA,CAAA,QAAA,GAAW,EAAX;AACA,EAAA,WAAA,CAAA,QAAA,GAAW,CAAX;AAuCzB,SAAA,WAAA;AAAC,CAzCD,CAAiC,KAAK,CAAC,SAAvC,CAAA;;SAAa,W","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as React from \"react\";\nvar BranchLabel = /** @class */ (function (_super) {\n    __extends(BranchLabel, _super);\n    function BranchLabel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = { textWidth: 0, textHeight: 0 };\n        _this.$text = React.createRef();\n        return _this;\n    }\n    BranchLabel.prototype.componentDidMount = function () {\n        var box = this.$text.current.getBBox();\n        this.setState({ textWidth: box.width, textHeight: box.height });\n    };\n    BranchLabel.prototype.render = function () {\n        var _a = this.props, branch = _a.branch, commit = _a.commit;\n        var boxWidth = this.state.textWidth + 2 * BranchLabel.paddingX;\n        var boxHeight = this.state.textHeight + 2 * BranchLabel.paddingY;\n        return (React.createElement(\"g\", null,\n            React.createElement(\"rect\", { stroke: branch.style.label.strokeColor || commit.style.color, fill: branch.style.label.bgColor, rx: branch.style.label.borderRadius, width: boxWidth, height: boxHeight }),\n            React.createElement(\"text\", { ref: this.$text, fill: branch.style.label.color || commit.style.color, style: { font: branch.style.label.font }, alignmentBaseline: \"middle\", dominantBaseline: \"middle\", x: BranchLabel.paddingX, y: boxHeight / 2 }, branch.name)));\n    };\n    BranchLabel.paddingX = 10;\n    BranchLabel.paddingY = 5;\n    return BranchLabel;\n}(React.Component));\nexport { BranchLabel };\n//# sourceMappingURL=BranchLabel.js.map"]},"metadata":{},"sourceType":"module"}