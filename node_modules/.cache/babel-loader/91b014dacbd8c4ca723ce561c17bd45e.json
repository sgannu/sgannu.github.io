{"ast":null,"code":"var _jsxFileName = \"/Users/sgannu/projects/sgannu.github.io/src/pages/ResumeGraph.js\";\nimport React from 'react';\nimport { Gitgraph, templateExtend, TemplateName } from '@gitgraph/react';\nimport { createFixedHashGenerator } from './helpers';\nexport function ResumeGraphComponent() {\n  const withoutAuthor = templateExtend(TemplateName.Metro, {\n    commit: {\n      message: {\n        displayAuthor: false,\n        displayHash: false\n      }\n    }\n  });\n  return React.createElement(Gitgraph, {\n    options: {\n      template: withoutAuthor // generateCommitHash: createFixedHashGenerator()\n\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, gitgraph => {\n    // Simulate git commands with Gitgraph API.\n    const master = gitgraph.branch(\"Srinivas Gannu\");\n    master.commit(\"Initial commit\");\n    const edu = gitgraph.branch(\"Education\");\n    edu.merge(education(gitgraph), \"Graduated in distinction\").tag(\"2004 - B'lors Degree\");\n    master.merge(edu);\n    const work = gitgraph.branch(\"Professional experience\");\n    work.commit(\"Bought some business casuals.\");\n    work.merge(alcatel(gitgraph), \"Learnt few french words: Bonjour, c'est mon premier boulot.\").tag(\"2005 - Associate Developer\");\n    work.merge(amdocs(gitgraph), \"Experienced Europe & US culture, enjoyed travelling & food.\").tag(\"2009 - Sr. Subject Matter Expert\");\n    work.merge(statefarm(gitgraph), \"Learnt parenting, additional shopping at ToysRus\").tag(\"2012 - Tech Lead/Architect\");\n    work.merge(aa(gitgraph), \"Father of two adorable boys with work life balance/integration. we miss ToysRus\").tag(\"Till date - Lead Analyst\").commit(\"Pursuing horizon for providing the best solutions with passion for technology and innovation.\");\n    master.merge(work, \"sgannu.e@gmail.com, 989.383.0030\");\n  });\n}\n\nfunction education(gitgraph) {\n  const edu = gitgraph.branch(\"Computer Science\");\n  edu.commit(\"Mathematics, Algos & DS, DB Systems, Programming, Networking\");\n  edu.commit(\"Information Systems, Computation & Automata etc\");\n  edu.commit(\"Built C compiler - Lexical analysis, Syntax analysis (lex & yacc)\");\n  return edu;\n}\n\nfunction alcatel(gitgraph) {\n  const branch = gitgraph.branch(\"Alcatel India Ltd\");\n  branch.commit(\"Extreme programming, experiments and fun driven development\");\n  branch.commit(\"built an application layer for CAMEL protocol for SS7 stack on TCP\");\n  return branch;\n}\n\nfunction amdocs(gitgraph) {\n  const branch = gitgraph.branch(\"Amdocs Ltd.\");\n  branch.commit(\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\");\n  branch.commit(\"From C, C++ to Java & web technologies\");\n  branch.commit(\"multi threading, web services, unit testing etc\");\n  branch.commit(\"Front end applications, desktop tools, automate tidious tasks, pl/sql\");\n  branch.commit(\"Reusable modules/libraries, apis\");\n  return branch;\n}\n\nfunction statefarm(gitgraph) {\n  const branch = gitgraph.branch(\"Statefarm\");\n  branch.commit(\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\").commit(\"CI/CD pipeline on jenkins, automating version control and releases\").commit(\"Encourage reusability, clean code, solid principles, design patterns\").commit(\"Leadership qualities, product thinking, Delivery challenges\");\n  return branch;\n}\n\nfunction aa(gitgraph) {\n  const branch = gitgraph.branch(\"American Airlines.\");\n  branch.commit(\"FullStack + devops, cloud technologies, design thinking, Agile principles\");\n  branch.commit(\"Angular vs react\");\n  branch.commit(\"From complex design patterns to simple and SOLID code\");\n  branch.commit(\"Ownership, mentoring, traning\");\n  return branch;\n}","map":{"version":3,"sources":["/Users/sgannu/projects/sgannu.github.io/src/pages/ResumeGraph.js"],"names":["React","Gitgraph","templateExtend","TemplateName","createFixedHashGenerator","ResumeGraphComponent","withoutAuthor","Metro","commit","message","displayAuthor","displayHash","template","gitgraph","master","branch","edu","merge","education","tag","work","alcatel","amdocs","statefarm","aa"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Gitgraph, templateExtend, TemplateName} from '@gitgraph/react';\nimport {createFixedHashGenerator} from './helpers';\n\nexport function ResumeGraphComponent() {\n    const withoutAuthor = templateExtend(TemplateName.Metro, {\n        commit: {\n            message: {\n                displayAuthor: false,\n                displayHash: false\n            },\n        },\n    });\n\n    return (\n        <Gitgraph options={{\n            template: withoutAuthor\n            // generateCommitHash: createFixedHashGenerator()\n        }}>\n            {(gitgraph) => {\n                // Simulate git commands with Gitgraph API.\n                const master = gitgraph.branch(\"Srinivas Gannu\");\n                master.commit(\"Initial commit\");\n                const edu = gitgraph.branch(\"Education\");\n                edu.merge(education(gitgraph), \"Graduated in distinction\").tag(\"2004 - B'lors Degree\");\n                master.merge(edu);\n                const work = gitgraph.branch(\"Professional experience\");\n                work.commit(\"Bought some business casuals.\");\n                work.merge(alcatel(gitgraph), \"Learnt few french words: Bonjour, c'est mon premier boulot.\").tag(\"2005 - Associate Developer\");\n                work.merge(amdocs(gitgraph), \"Experienced Europe & US culture, enjoyed travelling & food.\").tag(\"2009 - Sr. Subject Matter Expert\");\n                work.merge(statefarm(gitgraph), \"Learnt parenting, additional shopping at ToysRus\").tag(\"2012 - Tech Lead/Architect\");\n                work.merge(aa(gitgraph), \"Father of two adorable boys with work life balance/integration. we miss ToysRus\").tag(\"Till date - Lead Analyst\")\n                    .commit(\"Pursuing horizon for providing the best solutions with passion for technology and innovation.\");\n                master.merge(work, \"sgannu.e@gmail.com, 989.383.0030\");\n            }}\n        </Gitgraph>\n    );\n}\n\nfunction education(gitgraph) {\n    const edu = gitgraph.branch(\"Computer Science\");\n    edu.commit(\"Mathematics, Algos & DS, DB Systems, Programming, Networking\");\n    edu.commit(\"Information Systems, Computation & Automata etc\");\n    edu.commit(\"Built C compiler - Lexical analysis, Syntax analysis (lex & yacc)\");\n    return edu;\n}\n\nfunction alcatel(gitgraph) {\n    const branch = gitgraph.branch(\"Alcatel India Ltd\");\n    branch.commit(\"Extreme programming, experiments and fun driven development\");\n    branch.commit(\"built an application layer for CAMEL protocol for SS7 stack on TCP\");\n    return branch;\n}\n\nfunction amdocs(gitgraph) {\n    const branch = gitgraph.branch(\"Amdocs Ltd.\");\n    branch.commit(\"Extreme programming, linux kernel, IPC/socket programming, multi threading, shared memory etc\");\n    branch.commit(\"From C, C++ to Java & web technologies\");\n    branch.commit(\"multi threading, web services, unit testing etc\");\n    branch.commit(\"Front end applications, desktop tools, automate tidious tasks, pl/sql\");\n    branch.commit(\"Reusable modules/libraries, apis\");\n    return branch;\n}\n\nfunction statefarm(gitgraph) {\n    const branch = gitgraph.branch(\"Statefarm\");\n    branch.commit(\"FullStack development, experimenting on JS & JQuery, big data, Spring and other java libraries\")\n        .commit(\"CI/CD pipeline on jenkins, automating version control and releases\")\n        .commit(\"Encourage reusability, clean code, solid principles, design patterns\")\n        .commit(\"Leadership qualities, product thinking, Delivery challenges\");\n    return branch;\n}\n\nfunction aa(gitgraph) {\n    const branch = gitgraph.branch(\"American Airlines.\");\n    branch.commit(\"FullStack + devops, cloud technologies, design thinking, Agile principles\");\n    branch.commit(\"Angular vs react\");\n    branch.commit(\"From complex design patterns to simple and SOLID code\");\n    branch.commit(\"Ownership, mentoring, traning\");\n    return branch;\n}"]},"metadata":{},"sourceType":"module"}