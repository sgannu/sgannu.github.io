{"ast":null,"code":"import * as React from \"react\";\nexport var Dot = function (_a) {\n  var commit = _a.commit,\n      onMouseOver = _a.onMouseOver,\n      onMouseOut = _a.onMouseOut;\n  return (\n    /*\n      In order to handle strokes, we need to do some complex stuff hereâ€¦ ðŸ˜…\n         Problem: strokes are drawn inside & outside the circle.\n      But we want the stroke to be drawn inside only!\n         The outside overlaps with other elements, as we expect the dot to have a fixed size. So we want to crop the outside part.\n         Solution:\n      1. Create the circle in a <defs>\n      2. Define a clip path that references the circle\n      3. Use the clip path, adding the stroke.\n      4. Double stroke width as half of it will be clipped (the outside part).\n         Ref.: https://stackoverflow.com/a/32162431/3911841\n         P.S. there is a proposal for a stroke-alignment property,\n      but it's still a W3C Draft Â¯\\_(ãƒ„)_/Â¯\n      https://svgwg.org/specs/strokes/#SpecifyingStrokeAlignment\n    */\n    React.createElement(React.Fragment, null, React.createElement(\"defs\", null, React.createElement(\"circle\", {\n      id: commit.hash,\n      cx: commit.style.dot.size,\n      cy: commit.style.dot.size,\n      r: commit.style.dot.size,\n      fill: commit.style.dot.color\n    }), React.createElement(\"clipPath\", {\n      id: \"clip-\" + commit.hash\n    }, React.createElement(\"use\", {\n      xlinkHref: \"#\" + commit.hash\n    }))), React.createElement(\"g\", {\n      onClick: commit.onClick,\n      onMouseOver: onMouseOver,\n      onMouseOut: onMouseOut\n    }, React.createElement(\"use\", {\n      xlinkHref: \"#\" + commit.hash,\n      clipPath: \"url(#clip-\" + commit.hash + \")\",\n      stroke: commit.style.dot.strokeColor,\n      strokeWidth: commit.style.dot.strokeWidth && commit.style.dot.strokeWidth * 2\n    }), commit.dotText && React.createElement(\"text\", {\n      alignmentBaseline: \"central\",\n      textAnchor: \"middle\",\n      x: commit.style.dot.size,\n      y: commit.style.dot.size,\n      style: {\n        font: commit.style.dot.font\n      }\n    }, commit.dotText)))\n  );\n};","map":{"version":3,"sources":["../src/Dot.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AASA,OAAO,IAAM,GAAG,GAAwB,UAAC,EAAD,EAIvC;MAHC,MAAA,GAAA,EAAA,CAAA,M;MACA,WAAA,GAAA,EAAA,CAAA,W;MACA,UAAA,GAAA,EAAA,CAAA,U;AACI;AACJ;;;;;;;;;;;;;;;AAoBA,IAAA,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,MAAA,EAAE,EAAE,MAAM,CAAC,IADb;AAEE,MAAA,EAAE,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,IAFvB;AAGE,MAAA,EAAE,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,IAHvB;AAIE,MAAA,CAAC,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,IAJtB;AAKE,MAAA,IAAI,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB;AALzB,KAAA,CADF,EAQE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAU,MAAA,EAAE,EAAE,UAAQ,MAAM,CAAC;AAA7B,KAAA,EACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,MAAI,MAAM,CAAC;AAA3B,KAAA,CADF,CARF,CADF,EAcE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AACE,MAAA,OAAO,EAAE,MAAM,CAAC,OADlB;AAEE,MAAA,WAAW,EAAE,WAFf;AAGE,MAAA,UAAU,EAAE;AAHd,KAAA,EAKE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,SAAS,EAAE,MAAI,MAAM,CAAC,IADxB;AAEE,MAAA,QAAQ,EAAE,eAAa,MAAM,CAAC,IAApB,GAAwB,GAFpC;AAGE,MAAA,MAAM,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,WAH3B;AAIE,MAAA,WAAW,EACT,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,WAAjB,IAAgC,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,WAAjB,GAA+B;AALnE,KAAA,CALF,EAaG,MAAM,CAAC,OAAP,IACC,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,MAAA,iBAAiB,EAAC,SADpB;AAEE,MAAA,UAAU,EAAC,QAFb;AAGE,MAAA,CAAC,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,IAHtB;AAIE,MAAA,CAAC,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB,IAJtB;AAKE,MAAA,KAAK,EAAE;AAAE,QAAA,IAAI,EAAE,MAAM,CAAC,KAAP,CAAa,GAAb,CAAiB;AAAzB;AALT,KAAA,EAOG,MAAM,CAAC,OAPV,CAdJ,CAdF;AArBI;AA6DL,CAjEM","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nexport var Dot = function (_a) {\n    var commit = _a.commit, onMouseOver = _a.onMouseOver, onMouseOut = _a.onMouseOut;\n    return (\n    /*\n      In order to handle strokes, we need to do some complex stuff hereâ€¦ ðŸ˜…\n  \n      Problem: strokes are drawn inside & outside the circle.\n      But we want the stroke to be drawn inside only!\n  \n      The outside overlaps with other elements, as we expect the dot to have a fixed size. So we want to crop the outside part.\n  \n      Solution:\n      1. Create the circle in a <defs>\n      2. Define a clip path that references the circle\n      3. Use the clip path, adding the stroke.\n      4. Double stroke width as half of it will be clipped (the outside part).\n  \n      Ref.: https://stackoverflow.com/a/32162431/3911841\n  \n      P.S. there is a proposal for a stroke-alignment property,\n      but it's still a W3C Draft Â¯\\_(ãƒ„)_/Â¯\n      https://svgwg.org/specs/strokes/#SpecifyingStrokeAlignment\n    */\n    React.createElement(React.Fragment, null,\n        React.createElement(\"defs\", null,\n            React.createElement(\"circle\", { id: commit.hash, cx: commit.style.dot.size, cy: commit.style.dot.size, r: commit.style.dot.size, fill: commit.style.dot.color }),\n            React.createElement(\"clipPath\", { id: \"clip-\" + commit.hash },\n                React.createElement(\"use\", { xlinkHref: \"#\" + commit.hash }))),\n        React.createElement(\"g\", { onClick: commit.onClick, onMouseOver: onMouseOver, onMouseOut: onMouseOut },\n            React.createElement(\"use\", { xlinkHref: \"#\" + commit.hash, clipPath: \"url(#clip-\" + commit.hash + \")\", stroke: commit.style.dot.strokeColor, strokeWidth: commit.style.dot.strokeWidth && commit.style.dot.strokeWidth * 2 }),\n            commit.dotText && (React.createElement(\"text\", { alignmentBaseline: \"central\", textAnchor: \"middle\", x: commit.style.dot.size, y: commit.style.dot.size, style: { font: commit.style.dot.font } }, commit.dotText)))));\n};\n//# sourceMappingURL=Dot.js.map"]},"metadata":{},"sourceType":"module"}