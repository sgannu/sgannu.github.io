{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst branch_user_api_1 = require(\"./user-api/branch-user-api\");\n\nconst DELETED_BRANCH_NAME = \"\";\nexports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\n\nclass Branch {\n  constructor(options) {\n    this.gitgraph = options.gitgraph;\n    this.name = options.name;\n    this.style = options.style;\n    this.parentCommitHash = options.parentCommitHash;\n    this.commitDefaultOptions = options.commitDefaultOptions || {\n      style: {}\n    };\n    this.onGraphUpdate = options.onGraphUpdate;\n    this.renderLabel = options.renderLabel;\n  }\n  /**\n   * Return the API to manipulate Gitgraph branch as a user.\n   */\n\n\n  getUserApi() {\n    return new branch_user_api_1.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n  }\n  /**\n   * Return true if branch was deleted.\n   */\n\n\n  isDeleted() {\n    return this.name === DELETED_BRANCH_NAME;\n  }\n\n}\n\nexports.Branch = Branch;\n\nfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n  return new Branch({\n    name: DELETED_BRANCH_NAME,\n    gitgraph,\n    style,\n    onGraphUpdate\n  });\n}\n\nexports.createDeletedBranch = createDeletedBranch;","map":{"version":3,"sources":["../src/branch.ts"],"names":[],"mappings":";;;;;;AAEA,MAAA,iBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAiDA,MAAM,mBAAmB,GAAG,EAA5B;AA1CE,OAAA,CAAA,mBAAA,GAAA,mBAAA;;AA4CF,MAAM,MAAN,CAAY;AAWV,EAAA,WAAA,CAAY,OAAZ,EAAyC;AACvC,SAAK,QAAL,GAAgB,OAAO,CAAC,QAAxB;AACA,SAAK,IAAL,GAAY,OAAO,CAAC,IAApB;AACA,SAAK,KAAL,GAAa,OAAO,CAAC,KAArB;AACA,SAAK,gBAAL,GAAwB,OAAO,CAAC,gBAAhC;AACA,SAAK,oBAAL,GAA4B,OAAO,CAAC,oBAAR,IAAgC;AAAE,MAAA,KAAK,EAAE;AAAT,KAA5D;AACA,SAAK,aAAL,GAAqB,OAAO,CAAC,aAA7B;AACA,SAAK,WAAL,GAAmB,OAAO,CAAC,WAA3B;AACD;AAED;;;;;AAGO,EAAA,UAAU,GAAA;AACf,WAAO,IAAI,iBAAA,CAAA,aAAJ,CAAkB,IAAlB,EAAwB,KAAK,QAA7B,EAAuC,KAAK,aAA5C,CAAP;AACD;AAED;;;;;AAGO,EAAA,SAAS,GAAA;AACd,WAAO,KAAK,IAAL,KAAc,mBAArB;AACD;;AAjCS;;AA1CV,OAAA,CAAA,MAAA,GAAA,MAAA;;AA8EF,SAAS,mBAAT,CACE,QADF,EAEE,KAFF,EAGE,aAHF,EAG2B;AAEzB,SAAO,IAAI,MAAJ,CAAW;AAChB,IAAA,IAAI,EAAE,mBADU;AAEhB,IAAA,QAFgB;AAGhB,IAAA,KAHgB;AAIhB,IAAA;AAJgB,GAAX,CAAP;AAMD;;AA1FC,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst branch_user_api_1 = require(\"./user-api/branch-user-api\");\nconst DELETED_BRANCH_NAME = \"\";\nexports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\nclass Branch {\n    constructor(options) {\n        this.gitgraph = options.gitgraph;\n        this.name = options.name;\n        this.style = options.style;\n        this.parentCommitHash = options.parentCommitHash;\n        this.commitDefaultOptions = options.commitDefaultOptions || { style: {} };\n        this.onGraphUpdate = options.onGraphUpdate;\n        this.renderLabel = options.renderLabel;\n    }\n    /**\n     * Return the API to manipulate Gitgraph branch as a user.\n     */\n    getUserApi() {\n        return new branch_user_api_1.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n    }\n    /**\n     * Return true if branch was deleted.\n     */\n    isDeleted() {\n        return this.name === DELETED_BRANCH_NAME;\n    }\n}\nexports.Branch = Branch;\nfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n    return new Branch({\n        name: DELETED_BRANCH_NAME,\n        gitgraph,\n        style,\n        onGraphUpdate,\n    });\n}\nexports.createDeletedBranch = createDeletedBranch;\n//# sourceMappingURL=branch.js.map"]},"metadata":{},"sourceType":"script"}