{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst regular_1 = require(\"./regular\");\n\nclass CompactGraphRows extends regular_1.RegularGraphRows {\n  computeRowsFromCommits(commits) {\n    commits.forEach((commit, i) => {\n      let newRow = i;\n      const isFirstCommit = i === 0;\n\n      if (!isFirstCommit) {\n        const parentRow = this.getRowOf(commit.parents[0]);\n        const historyParent = commits[i - 1];\n        newRow = Math.max(parentRow + 1, this.getRowOf(historyParent.hash));\n        const isMergeCommit = commit.parents.length > 1;\n\n        if (isMergeCommit) {\n          // Push commit to next row to avoid collision when the branch in which\n          // the merge happens has more commits than the merged branch.\n          const mergeTargetParentRow = this.getRowOf(commit.parents[1]);\n          if (parentRow < mergeTargetParentRow) newRow++;\n        }\n      }\n\n      this.rows.set(commit.hash, newRow);\n    });\n  }\n\n}\n\nexports.CompactGraphRows = CompactGraphRows;","map":{"version":3,"sources":["../../src/graph-rows/compact.ts"],"names":[],"mappings":";;;;;;AAEA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AAEA,MAAa,gBAAb,SAA6C,SAAA,CAAA,gBAA7C,CAAoE;AACxD,EAAA,sBAAsB,CAAC,OAAD,EAA8B;AAC5D,IAAA,OAAO,CAAC,OAAR,CAAgB,CAAC,MAAD,EAAS,CAAT,KAAc;AAC5B,UAAI,MAAM,GAAG,CAAb;AAEA,YAAM,aAAa,GAAG,CAAC,KAAK,CAA5B;;AACA,UAAI,CAAC,aAAL,EAAoB;AAClB,cAAM,SAAS,GAAG,KAAK,QAAL,CAAc,MAAM,CAAC,OAAP,CAAe,CAAf,CAAd,CAAlB;AACA,cAAM,aAAa,GAAG,OAAO,CAAC,CAAC,GAAG,CAAL,CAA7B;AACA,QAAA,MAAM,GAAG,IAAI,CAAC,GAAL,CAAS,SAAS,GAAG,CAArB,EAAwB,KAAK,QAAL,CAAc,aAAa,CAAC,IAA5B,CAAxB,CAAT;AAEA,cAAM,aAAa,GAAG,MAAM,CAAC,OAAP,CAAe,MAAf,GAAwB,CAA9C;;AACA,YAAI,aAAJ,EAAmB;AACjB;AACA;AACA,gBAAM,oBAAoB,GAAG,KAAK,QAAL,CAAc,MAAM,CAAC,OAAP,CAAe,CAAf,CAAd,CAA7B;AACA,cAAI,SAAS,GAAG,oBAAhB,EAAsC,MAAM;AAC7C;AACF;;AAED,WAAK,IAAL,CAAU,GAAV,CAAc,MAAM,CAAC,IAArB,EAA2B,MAA3B;AACD,KAnBD;AAoBD;;AAtBiE;;AAApE,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst regular_1 = require(\"./regular\");\nclass CompactGraphRows extends regular_1.RegularGraphRows {\n    computeRowsFromCommits(commits) {\n        commits.forEach((commit, i) => {\n            let newRow = i;\n            const isFirstCommit = i === 0;\n            if (!isFirstCommit) {\n                const parentRow = this.getRowOf(commit.parents[0]);\n                const historyParent = commits[i - 1];\n                newRow = Math.max(parentRow + 1, this.getRowOf(historyParent.hash));\n                const isMergeCommit = commit.parents.length > 1;\n                if (isMergeCommit) {\n                    // Push commit to next row to avoid collision when the branch in which\n                    // the merge happens has more commits than the merged branch.\n                    const mergeTargetParentRow = this.getRowOf(commit.parents[1]);\n                    if (parentRow < mergeTargetParentRow)\n                        newRow++;\n                }\n            }\n            this.rows.set(commit.hash, newRow);\n        });\n    }\n}\nexports.CompactGraphRows = CompactGraphRows;\n//# sourceMappingURL=compact.js.map"]},"metadata":{},"sourceType":"script"}