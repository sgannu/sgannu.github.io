{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/sgannu/projects/sgannu.github.io/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/sgannu/projects/sgannu.github.io/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar branch_user_api_1 = require(\"./user-api/branch-user-api\");\n\nvar DELETED_BRANCH_NAME = \"\";\nexports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\n\nvar Branch =\n/*#__PURE__*/\nfunction () {\n  function Branch(options) {\n    _classCallCheck(this, Branch);\n\n    this.gitgraph = options.gitgraph;\n    this.name = options.name;\n    this.style = options.style;\n    this.parentCommitHash = options.parentCommitHash;\n    this.commitDefaultOptions = options.commitDefaultOptions || {\n      style: {}\n    };\n    this.onGraphUpdate = options.onGraphUpdate;\n    this.renderLabel = options.renderLabel;\n  }\n  /**\n   * Return the API to manipulate Gitgraph branch as a user.\n   */\n\n\n  _createClass(Branch, [{\n    key: \"getUserApi\",\n    value: function getUserApi() {\n      return new branch_user_api_1.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n    }\n    /**\n     * Return true if branch was deleted.\n     */\n\n  }, {\n    key: \"isDeleted\",\n    value: function isDeleted() {\n      return this.name === DELETED_BRANCH_NAME;\n    }\n  }]);\n\n  return Branch;\n}();\n\nexports.Branch = Branch;\n\nfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n  return new Branch({\n    name: DELETED_BRANCH_NAME,\n    gitgraph: gitgraph,\n    style: style,\n    onGraphUpdate: onGraphUpdate\n  });\n}\n\nexports.createDeletedBranch = createDeletedBranch;","map":{"version":3,"sources":["../src/branch.ts"],"names":[],"mappings":";;;;;;;;;;AAEA,IAAA,iBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAiDA,IAAM,mBAAmB,GAAG,EAA5B;AA1CE,OAAA,CAAA,mBAAA,GAAA,mBAAA;;IA4CI,M;;;AAWJ,kBAAY,OAAZ,EAAyC;AAAA;;AACvC,SAAK,QAAL,GAAgB,OAAO,CAAC,QAAxB;AACA,SAAK,IAAL,GAAY,OAAO,CAAC,IAApB;AACA,SAAK,KAAL,GAAa,OAAO,CAAC,KAArB;AACA,SAAK,gBAAL,GAAwB,OAAO,CAAC,gBAAhC;AACA,SAAK,oBAAL,GAA4B,OAAO,CAAC,oBAAR,IAAgC;AAAE,MAAA,KAAK,EAAE;AAAT,KAA5D;AACA,SAAK,aAAL,GAAqB,OAAO,CAAC,aAA7B;AACA,SAAK,WAAL,GAAmB,OAAO,CAAC,WAA3B;AACD;AAED;;;;;;;iCAGiB;AACf,aAAO,IAAI,iBAAA,CAAA,aAAJ,CAAkB,IAAlB,EAAwB,KAAK,QAA7B,EAAuC,KAAK,aAA5C,CAAP;AACD;AAED;;;;;;gCAGgB;AACd,aAAO,KAAK,IAAL,KAAc,mBAArB;AACD;;;;;;AA3ED,OAAA,CAAA,MAAA,GAAA,MAAA;;AA8EF,SAAS,mBAAT,CACE,QADF,EAEE,KAFF,EAGE,aAHF,EAG2B;AAEzB,SAAO,IAAI,MAAJ,CAAW;AAChB,IAAA,IAAI,EAAE,mBADU;AAEhB,IAAA,QAAQ,EAAR,QAFgB;AAGhB,IAAA,KAAK,EAAL,KAHgB;AAIhB,IAAA,aAAa,EAAb;AAJgB,GAAX,CAAP;AAMD;;AA1FC,OAAA,CAAA,mBAAA,GAAA,mBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst branch_user_api_1 = require(\"./user-api/branch-user-api\");\nconst DELETED_BRANCH_NAME = \"\";\nexports.DELETED_BRANCH_NAME = DELETED_BRANCH_NAME;\nclass Branch {\n    constructor(options) {\n        this.gitgraph = options.gitgraph;\n        this.name = options.name;\n        this.style = options.style;\n        this.parentCommitHash = options.parentCommitHash;\n        this.commitDefaultOptions = options.commitDefaultOptions || { style: {} };\n        this.onGraphUpdate = options.onGraphUpdate;\n        this.renderLabel = options.renderLabel;\n    }\n    /**\n     * Return the API to manipulate Gitgraph branch as a user.\n     */\n    getUserApi() {\n        return new branch_user_api_1.BranchUserApi(this, this.gitgraph, this.onGraphUpdate);\n    }\n    /**\n     * Return true if branch was deleted.\n     */\n    isDeleted() {\n        return this.name === DELETED_BRANCH_NAME;\n    }\n}\nexports.Branch = Branch;\nfunction createDeletedBranch(gitgraph, style, onGraphUpdate) {\n    return new Branch({\n        name: DELETED_BRANCH_NAME,\n        gitgraph,\n        style,\n        onGraphUpdate,\n    });\n}\nexports.createDeletedBranch = createDeletedBranch;\n//# sourceMappingURL=branch.js.map"]},"metadata":{},"sourceType":"script"}